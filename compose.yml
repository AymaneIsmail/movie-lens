services:
# -------------------------- HADOOP / YARN MASTER -------------------------- #
  namenode:
    container_name: hadoop-namenode
    build: .
    hostname: namenode
    networks: [hadoop-net]
    ports:
      - "9870:9870"   # HDFS
      - "8088:8088"   # YARN ResourceManager
      - "18080:18080" # Spark History Server
    volumes:
      - namenode-data:/home/root/hadoop/dfs/name
      - ./data:/root/data
      - ./scripts:/root/scripts
    command: [ "sh", "-c", "/root/service-start.sh namenode" ]

# -------------------- WORKERS (DataNode + NodeManager) -------------------- #
  datanode1:
    container_name: hadoop-datanode1
    build: .
    hostname: datanode1
    networks: [hadoop-net]
    volumes:
      - datanode1-data:/home/root/hadoop/dfs/data
    command: [ "sh", "-c", "/root/service-start.sh datanode" ]
    depends_on: [namenode]

  datanode2:
    container_name: hadoop-datanode2
    build: .
    hostname: datanode2
    networks: [hadoop-net]
    volumes:
      - datanode2-data:/home/root/hadoop/dfs/data
    command: [ "sh", "-c", "/root/service-start.sh datanode" ]
    depends_on: [namenode]

# --------------------------------- JUPYTER -------------------------------- #
  jupyter:
    container_name: jupyter-notebook
    build: .
    hostname: jupyter
    networks: [hadoop-net]
    ports:
      - "8888:8888"   # Notebook
      - "4040:4040"   # Spark UI de la premi√®re application
    volumes:
      - ./notebooks:/root/notebooks
      - ./data:/root/data
    environment:
      PYSPARK_DRIVER_PYTHON_OPTS: "notebook --NotebookApp.token=''"
      SPARK_PUBLIC_DNS: "localhost"
    command: [ "sh", "-c", "/root/service-start.sh jupyter" ]
    depends_on: [namenode]

# ---------------------------- Zookeeper / Kafka --------------------------- #
  zookeeper:
    container_name: zookeeper
    build: .
    hostname: zookeeper
    networks: [hadoop-net]
    ports: ["2181:2181"]
    command: [ "sh", "-c", "/root/service-start.sh zookeeper" ]

  kafka:
    container_name: kafka
    build: .
    hostname: kafka
    networks: [hadoop-net]
    ports: ["9092:9092"]
    depends_on: [zookeeper]
    command: [ "sh", "-c", "/root/service-start.sh kafka" ]

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks: [hadoop-net]
    ports: ["8085:8080"]
    depends_on: [kafka]
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      
# -------------------------------- CASSANDRA ------------------------------- #
  cassandra:
    container_name: cassandra
    image: cassandra:4.1
    networks: [hadoop-net]
    ports: ["9042:9042"]
    volumes:
      - cassandra-data:/var/lib/cassandra
      - ./scripts:/root/scripts
    environment:
      CASSANDRA_CLUSTER_NAME: "BigDataCluster"
      CASSANDRA_NUM_TOKENS: 16
      CASSANDRA_START_RPC: "true"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  namenode-data:
  datanode1-data:
  datanode2-data:
  cassandra-data:

networks:
  hadoop-net: